#!/usr/bin/env ruby
# encoding: utf-8
require 'netrc'
require 'aws'
require 'threadify'
require 'thread'

require 'httpclient'
require 'addressable/uri'

creds = Netrc.read['aws.amazon.com']

BASE_GHA_URL       = "http://data.githubarchive.org"
GHA_BUCKET         = 'ghadata.copiousfreetime.org'

netrc     = Netrc.read[ 'aws.amazon.com' ]
s3        = AWS::S3.new( :access_key_id => netrc[0], :secret_access_key => netrc[1] )
base_url  = Addressable::URI.parse( BASE_GHA_URL )

# Get the list of urls that we already have in the system
gha_bucket     = s3.buckets[ GHA_BUCKET ]
uploaded       = gha_bucket.objects
puts "Building list of items to check..."
uploaded_md5   = uploaded.map { |u| [u, u.etag] }

puts " Checking #{uploaded_md5.size} s3 files against #{BASE_GHA_URL}"
success = Queue.new
failure = Queue.new
log     = Queue.new

logger = Thread.new do
  loop do
    msg = log.deq
    puts msg
  end
end

uploaded_md5.threadify do |job|
  key, etag  = *job
  client     = HTTPClient.new
  check_uri  = base_url.join( key ).to_s
  res        = client.head( check_uri, nil, { 'If-None-Match' => etag } )
  
  if res.status_code == 304 then
    success << basename
    log << "#{key.ljust( 42) } : success"
  else
    failure << basename
    log << "#{key.ljust( 42) } : failure\n#{res.inspect}"
  end
end

logger.join
puts "  success: #{"%6d" % success.size}\tfailure: #{"%6d" % failure.size}\ttotal: #{uploaded_md5.size}\r"
